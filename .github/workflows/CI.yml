name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

  workflow_dispatch:

jobs:
  lint-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.13
      with:
        source: 'Client Server'
        clangFormatVersion: 12

  build-linux:
    needs: lint-format
    runs-on: ubuntu-latest
    steps:
    - name: Dependencies
      run: |
        sudo apt update
        sudo apt-get update
        sudo apt-get install -y libudev-dev libgl-dev libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxres-dev libxss-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev
    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Build
      run: |
        conan config init
        mkdir -p build; cd build && conan install .. --build=missing  -s compiler.libcxx=libstdc++11 -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True && cmake -DCMAKE_BUILD_TYPE=Debug .. && cmake --build  . -- -j 3

  build-windows:
    needs: lint-format
    runs-on: windows-latest
    steps:
    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Launch build script
      run: ./build.bat

  mirroring:
    if: github.event_name == 'push'
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ secrets.EPI_REPO_URL }}
          ssh_private_key:
            ${{ secrets.EPI_MIRRORING_KEY }}
